{"version":3,"sources":["services/phoneService.js","components/handleDelete.js","components/Person.js","components/Persons.js","components/HandleChange.js","components/Message.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","person","post","console","log","id","delete","changedContact","put","handleDelete","window","confirm","name","phoneService","Person","number","onClick","Persons","persons","map","key","notificationStyle","color","fontSize","padding","marginBottom","Query","showSearch","search","handleChange","onSubmit","style","value","onChange","type","Notification","message","App","useState","setPersons","newName","setNewName","NewNumb","setNewNumber","setSearch","setMessage","setType","useEffect","Message","event","preventDefault","obj","find","n","toLocaleLowerCase","found","undefined","ReactDOM","render","document","getElementById","target","names","includes","contact","changedcontact","catch","error","setTimeout","personObject","concat","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8004441.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst addPerson = (person) =>{\n    const request = axios.post(baseUrl,person)\n    return request.then(response =>response.data)\n}\n\nconst deletePerson = (person) =>{\n    console.log(\"this is id\",person.id)\n    const request = axios.delete(`${baseUrl}/${person.id}`)\n    return request.then(response => response.data)\n}\n\nconst changeNumber = (person,changedContact) =>{\n    const request = axios.put(`${baseUrl}/${person.id}`,changedContact)\n    return request.then(response => response.data)\n}\nexport default { getAll, addPerson, deletePerson, changeNumber}","import phoneService from '../services/phoneService'\n\nconst handleDelete = ({person}) =>{\n    console.log(person)\n    if (!person){\n    }\n    else if (window.confirm(`Delete ${person.name}`)){\n         phoneService.deletePerson(person);\n    }\n  }\n\nexport default handleDelete;","import React from 'react'\nimport handleDelete from './handleDelete'\n\nconst Person = ({person}) => \n  (\n  <>\n  <p>{person.name} {person.number}  <button onClick={() => handleDelete({person})}>delete</button></p>\n  </>\n)\nexport default Person; ","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons}) => (\n    <>\n    {persons.map(person =>\n    <Person person={person} key={person.name}></Person>\n    )}\n    </>\n    )\nexport default Persons;","import React from 'react'\n\nconst notificationStyle ={\n    color:'purple',\n    fontSize:20,\n    padding:10,\n    marginBottom:10}\nconst Query = ({showSearch,search,handleChange}) =>\n(\n<>\n<form onSubmit={showSearch} >\n<div style={notificationStyle}>\nfilter shown with: <input\nvalue={search}\nonChange={handleChange}></input>\n<button type=\"submit\">search</button>\n</div>\n</form>\n</>\n)\n\n\nexport default Query;","import React from 'react'\n\nconst Notification = ({message},{type}) => {\n    if (message === null){\n        return null\n    }\n    const notificationStyle ={\n        color:'green',\n        fontSize:20,\n        padding:10,\n        marginBottom:10}\n\n    if (type === \"error\"){\n        const notificationStyle ={\n            color:'red',\n            fontSize:20,\n            padding:10,\n            marginBottom:10\n\n        }}\n\n    \n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Query from './components/HandleChange'\nimport ReactDOM from 'react-dom'\nimport phoneService from './services/phoneService'\nimport Message from './components/Message'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [NewNumb, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [message, setMessage] = useState('')\n  const [type, setType] = useState('')\n\n  useEffect(() => {phoneService.getAll()\n    .then(response => setPersons(response))},[persons])\n  const handleChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleChange1 = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleChange2 = (event) => {\n    setSearch(event.target.value)\n    console.log(\"this is the search \",search)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const names = persons.map(person => person.name.toLocaleLowerCase())\n    console.log(\"this is the names\",names)\n    if (names.includes(newName.toLocaleLowerCase())){\n      const contact = persons.find(n => n.name.toLocaleLowerCase() === newName.toLocaleLowerCase())\n      console.log(\"this is contact\",contact)\n      const changedcontact = {...contact, number: NewNumb}\n      if(window.confirm(`${newName} is already added to phonebook,replace the old number with a new one?`)){\n        phoneService.changeNumber(contact,changedcontact).catch(error =>{\n          setMessage(`${newName} was already removed from the server`)\n          setType(\"error\")\n          setTimeout(() => setMessage(\"\"),4000)\n        })\n        setMessage(`${newName} number was change in the server`)\n        setType(\"success\")\n        setTimeout(() =>{\n          setMessage(null)\n        },4000 )\n        setNewName('')\n        setNewNumber('')\n      }\n      else {\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n    else{\n    const personObject = {\n      name: newName,\n      number: NewNumb,\n    }\n    setPersons(persons.concat(personObject))\n    setMessage(`${newName} was added to the server`)\n    setType(\"success\")\n    setTimeout(() =>{\n      setMessage(null)\n    },4000 )\n    phoneService.addPerson(personObject)\n    console.log(names)\n    console.log(persons)\n    setNewName('')\n    setNewNumber('')\n  }\n}\nconst showSearch = (event) => {\n  event.preventDefault()\n  console.log(\"this is showSearch\",search)\n   const obj = persons.find(n => n.name.toLocaleLowerCase() === search.toLocaleLowerCase())\n   const found = {...obj}\n   console.log(found)\n   if (obj !== undefined){\n    ReactDOM.render(`${obj.name} ${obj.number}`,document.getElementById(\"query\"));\n    setSearch(\"\")}\n    else {\n      ReactDOM.render(`${search} is not in the phonebook`,document.getElementById(\"query\"));\n      setSearch(\"\") \n    }\n   }\n\n\n  return (\n    <>\n    <h1>Phonebook</h1>\n    <Message message={message} type={type}></Message>\n    <Query showSearch={showSearch} search={search} handleChange={handleChange2}></Query>\n      <h2>add a new</h2>\n      <form onSubmit={addName} >\n        <div>\n          name: <input\n          value={newName}\n          onChange={handleChange} />\n        </div>\n        <div>\n          number: <input\n          value={NewNumb}\n          onChange={handleChange1} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        <Persons persons={persons}></Persons>\n      </div>\n      </>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}